{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.getElementsByTagName(\"table\")[0];\nvar tbody = table.tBodies[0];\nsortingTable(table);\nselectRow(tbody);\nform();\nfunction sortingTable(inputTable) {\n    var thead = inputTable.tHead;\n    var clickHandler = {\n        holdedIndex: undefined,\n        direction: true,\n        changeDirection: function(columnIndex) {\n            this.direction = this.holdedIndex !== columnIndex ? true : !this.direction;\n        }\n    };\n    thead.addEventListener(\"click\", function(e) {\n        var cellIndex = e.target.cellIndex;\n        var newList = sortedList(tbody.rows, cellIndex);\n        tbody.innerHTML = \"\";\n        createTbody(newList);\n        clickHandler.holdedIndex = cellIndex;\n    });\n    function sortedList(tbodyRows, columnIndex) {\n        var newList = [];\n        clickHandler.changeDirection(columnIndex);\n        for(var row = 0; row < tbodyRows.length; row++){\n            newList.push([]);\n            for(var cell = 0; cell < tbodyRows[row].cells.length; cell++)newList[row].push(tbodyRows[row].cells[cell].innerText);\n        }\n        return newList.sort(function(a, b) {\n            var firstEl = clickHandler.direction ? a[columnIndex] : b[columnIndex];\n            var secondEl = clickHandler.direction ? b[columnIndex] : a[columnIndex];\n            if (columnIndex === 3 || columnIndex === 4) return +firstEl.replace(/\\D/g, \"\") - +secondEl.replace(/\\D/g, \"\");\n            else return firstEl.localeCompare(secondEl);\n        });\n    }\n    function createTbody(arr) {\n        arr.forEach(function(row) {\n            var newRow = document.createElement(\"tr\");\n            row.forEach(function(cell) {\n                var newCell = document.createElement(\"td\");\n                newCell.innerText = cell;\n                newRow.appendChild(newCell);\n            });\n            tbody.appendChild(newRow);\n        });\n    }\n}\nfunction selectRow(inputTable) {\n    inputTable.addEventListener(\"click\", function(e) {\n        var selectedRow = e.target.parentElement.sectionRowIndex;\n        for(var i = 0; i < tbody.rows.length; i++)tbody.rows[i].removeAttribute(\"class\");\n        tbody.rows[selectedRow].setAttribute(\"class\", \"active\");\n    });\n}\nfunction form() {\n    var formElem = document.createElement(\"form\");\n    var inputArr = [\n        \"Name\",\n        \"Position\",\n        \"Office\",\n        \"Age\",\n        \"Salary\"\n    ];\n    var dataOffice = [\n        \"Tokyo\",\n        \"Singapore\",\n        \"London\",\n        \"New York\",\n        \"Edinburgh\",\n        \"San Francisco\"\n    ];\n    formElem.name = \"table_input\";\n    inputArr.forEach(function(e) {\n        var input = document.createElement(\"input\");\n        var label = document.createElement(\"label\");\n        if (e === \"Office\") {\n            input = document.createElement(\"select\");\n            dataOffice.forEach(function(d) {\n                var opt = document.createElement(\"option\");\n                opt.value = d;\n                opt.innerText = d;\n                input.append(opt);\n            });\n        } else if (e === \"Age\" || e === \"Salary\") input.type = \"number\";\n        else input.type = \"text\";\n        input.setAttribute(\"data-qa\", e.toLocaleLowerCase());\n        label.innerText = \"\".concat(e, \": \");\n        label.appendChild(input);\n        formElem.append(label);\n    });\n    var inputSubmit = document.createElement(\"button\");\n    inputSubmit.innerText = \"Save to table\";\n    inputSubmit.type = \"submit\";\n    inputSubmit.setAttribute(\"for\", \"table_input\");\n    formElem.appendChild(inputSubmit);\n    formElem.setAttribute(\"class\", \"new-employee-form\");\n    formElem.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var error = false;\n        var notifElem = document.createElement(\"div\");\n        var notifTitleElem = document.createElement(\"p\");\n        var newRow = document.createElement(\"tr\");\n        notifElem.setAttribute(\"data-qa\", \"notification\");\n        notifTitleElem.setAttribute(\"class\", \"title\");\n        notifTitleElem.innerText = \"Success\";\n        notifElem.setAttribute(\"class\", \"notification success\");\n        for(var i = 0; i < e.target.length - 1; i++){\n            var key = e.target[i].dataset.qa;\n            var value = e.target[i].value;\n            var newTd = document.createElement(\"td\");\n            if (key === \"name\" && value.trim().length < 4 || key === \"age\" && (value < 18 || value > 90) || value.trim().length === 0) {\n                notifTitleElem.innerText = \"Error\";\n                notifElem.setAttribute(\"class\", \"notification error\");\n                notifElem.append(notifTitleElem);\n                document.body.append(notifElem);\n                error = true;\n                break;\n            }\n            newTd.innerText = key === \"salary\" ? toCurency(value) : value;\n            newRow.append(newTd);\n        }\n        notifElem.append(notifTitleElem);\n        document.body.append(notifElem);\n        if (!error) tbody.append(newRow);\n    });\n    document.body.append(formElem);\n}\nfunction toCurency(num) {\n    var USD = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\"\n    });\n    return USD.format(num).slice(0, -3);\n}\n\n//# sourceMappingURL=index.28c8d3dd.js.map\n","'use strict';\n\nconst table = document.getElementsByTagName('table')[0];\nconst tbody = table.tBodies[0];\n\nsortingTable(table);\nselectRow(tbody);\nform();\n\nfunction sortingTable(inputTable) {\n  const thead = inputTable.tHead;\n  const clickHandler = {\n    holdedIndex: undefined,\n    direction: true,\n    changeDirection(columnIndex) {\n      this.direction =\n        this.holdedIndex !== columnIndex ? true : !this.direction;\n    },\n  };\n\n  thead.addEventListener('click', (e) => {\n    const cellIndex = e.target.cellIndex;\n    const newList = sortedList(tbody.rows, cellIndex);\n\n    tbody.innerHTML = '';\n    createTbody(newList);\n    clickHandler.holdedIndex = cellIndex;\n  });\n\n  function sortedList(tbodyRows, columnIndex) {\n    const newList = [];\n\n    clickHandler.changeDirection(columnIndex);\n\n    for (let row = 0; row < tbodyRows.length; row++) {\n      newList.push([]);\n\n      for (let cell = 0; cell < tbodyRows[row].cells.length; cell++) {\n        newList[row].push(tbodyRows[row].cells[cell].innerText);\n      }\n    }\n\n    return newList.sort((a, b) => {\n      const firstEl = clickHandler.direction ? a[columnIndex] : b[columnIndex];\n      const secondEl = clickHandler.direction ? b[columnIndex] : a[columnIndex];\n\n      if (columnIndex === 3 || columnIndex === 4) {\n        return +firstEl.replace(/\\D/g, '') - +secondEl.replace(/\\D/g, '');\n      } else {\n        return firstEl.localeCompare(secondEl);\n      }\n    });\n  }\n\n  function createTbody(arr) {\n    arr.forEach((row) => {\n      const newRow = document.createElement('tr');\n\n      row.forEach((cell) => {\n        const newCell = document.createElement('td');\n\n        newCell.innerText = cell;\n        newRow.appendChild(newCell);\n      });\n\n      tbody.appendChild(newRow);\n    });\n  }\n}\n\nfunction selectRow(inputTable) {\n  inputTable.addEventListener('click', (e) => {\n    const selectedRow = e.target.parentElement.sectionRowIndex;\n\n    for (let i = 0; i < tbody.rows.length; i++) {\n      tbody.rows[i].removeAttribute('class');\n    }\n    tbody.rows[selectedRow].setAttribute('class', 'active');\n  });\n}\n\nfunction form() {\n  const formElem = document.createElement('form');\n  const inputArr = ['Name', 'Position', 'Office', 'Age', 'Salary'];\n  const dataOffice = [\n    'Tokyo',\n    'Singapore',\n    'London',\n    'New York',\n    'Edinburgh',\n    'San Francisco',\n  ];\n\n  formElem.name = 'table_input';\n\n  inputArr.forEach((e) => {\n    let input = document.createElement('input');\n    const label = document.createElement('label');\n\n    if (e === 'Office') {\n      input = document.createElement('select');\n\n      dataOffice.forEach((d) => {\n        const opt = document.createElement('option');\n\n        opt.value = d;\n        opt.innerText = d;\n        input.append(opt);\n      });\n    } else if (e === 'Age' || e === 'Salary') {\n      input.type = 'number';\n    } else {\n      input.type = 'text';\n    }\n\n    input.setAttribute('data-qa', e.toLocaleLowerCase());\n    label.innerText = `${e}: `;\n    label.appendChild(input);\n    formElem.append(label);\n  });\n\n  const inputSubmit = document.createElement('button');\n\n  inputSubmit.innerText = 'Save to table';\n  inputSubmit.type = 'submit';\n  inputSubmit.setAttribute('for', 'table_input');\n  formElem.appendChild(inputSubmit);\n\n  formElem.setAttribute('class', 'new-employee-form');\n\n  formElem.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    let error = false;\n    const notifElem = document.createElement('div');\n    const notifTitleElem = document.createElement('p');\n    const newRow = document.createElement('tr');\n\n    notifElem.setAttribute('data-qa', 'notification');\n    notifTitleElem.setAttribute('class', 'title');\n    notifTitleElem.innerText = 'Success';\n    notifElem.setAttribute('class', 'notification success');\n\n    for (let i = 0; i < e.target.length - 1; i++) {\n      const key = e.target[i].dataset.qa;\n      const value = e.target[i].value;\n      const newTd = document.createElement('td');\n\n      if (\n        (key === 'name' && value.trim().length < 4) ||\n        (key === 'age' && (value < 18 || value > 90)) ||\n        value.trim().length === 0\n      ) {\n        notifTitleElem.innerText = 'Error';\n        notifElem.setAttribute('class', 'notification error');\n        notifElem.append(notifTitleElem);\n        document.body.append(notifElem);\n        error = true;\n        break;\n      }\n\n      newTd.innerText = key === 'salary' ? toCurency(value) : value;\n      newRow.append(newTd);\n    }\n    notifElem.append(notifTitleElem);\n    document.body.append(notifElem);\n\n    if (!error) {\n      tbody.append(newRow);\n    }\n  });\n  document.body.append(formElem);\n}\n\nfunction toCurency(num) {\n  const USD = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n\n  return USD.format(num).slice(0, -3);\n}\n"],"names":["thead","clickHandler","formElem","dataOffice","inputSubmit","table","document","getElementsByTagName","tbody","tBodies","inputTable","tHead","holdedIndex","undefined","direction","changeDirection","columnIndex","addEventListener","e","cellIndex","target","newList","sortedList","tbodyRows","row","length","push","cell","cells","innerText","sort","a","b","firstEl","secondEl","replace","localeCompare","rows","innerHTML","createTbody","arr","forEach","newRow","createElement","newCell","appendChild","selectRow","selectedRow","parentElement","sectionRowIndex","i","removeAttribute","setAttribute","name","inputArr","input","label","d","opt","value","append","type","toLocaleLowerCase","concat","preventDefault","error","notifElem","notifTitleElem","key","dataset","qa","newTd","trim","body","USD","Intl","NumberFormat","style","currency","format","slice"],"version":3,"file":"index.28c8d3dd.js.map"}